// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type APDataSetList struct {
	ApDataSetData []*ApDataSetRes `json:"apDataSetData"`
	CurPageNum    int64           `json:"curPageNum"`
	TotalNum      int64           `json:"totalNum"`
}

type APMethodWithAp struct {
	Did               string       `json:"did"`
	Name              string       `json:"name"`
	Method            string       `json:"method"`
	MethodName        string       `json:"methodName"`
	MethodDescription string       `json:"methodDescription"`
	Icon              string       `json:"icon"`
	Used              int64        `json:"used"`
	Labels            *LabelsInfos `json:"labels"`
}

type AddNewOuterTaskReq struct {
	CallerDid string                  `json:"caller_did"`
	Data      *AddNewOuterTaskReqData `json:"data"`
	Sig       string                  `json:"sig"`
}

type AddNewOuterTaskReqData struct {
	DpDid    string      `json:"dp_did"`
	DpMethod string      `json:"dp_method"`
	ApDid    string      `json:"ap_did"`
	ApMethod string      `json:"ap_method"`
	Wallet   *WalletInfo `json:"wallet"`
}

type AddTask struct {
	UserDid  string `json:"userDID"`
	ApDid    string `json:"apDID"`
	ApMethod string `json:"apMethod"`
	DpDid    string `json:"dpDID"`
	DpMethod string `json:"dpMethod"`
	BindInfo string `json:"bindInfo"`
}

type AddUserBasicInfoReq struct {
	Did      string `json:"did"`
	NickName string `json:"nick_name"`
	Email    string `json:"email"`
	Vcode    string `json:"vcode"`
}

type AlgorithmProvider struct {
	Name            string `json:"name"`
	Type            string `json:"type"`
	Introduction    string `json:"introduction"`
	Did             string `json:"did"`
	CreateTime      int64  `json:"createTime"`
	Title           string `json:"title"`
	Provider        string `json:"provider"`
	InvokeFrequency int64  `json:"invokeFrequency"`
	APIState        int64  `json:"apiState"`
	Author          string `json:"author"`
	Popularity      int64  `json:"popularity"`
	Delay           int64  `json:"delay"`
	Icon            string `json:"icon"`
}

type AlgorithmProviderMethodWhere struct {
	NameLike *string `json:"name_like"`
	DidLike  *string `json:"did_like"`
}

type AlgorithmProviderWhere struct {
	NameLike *string `json:"name_like"`
}

type ApDataSetInfo struct {
	DataSetID         int64       `json:"dataSetID"`
	DataSetName       string      `json:"dataSetName"`
	DataSetMethodName string      `json:"dataSetMethodName"`
	DataSetDesc       string      `json:"dataSetDesc"`
	HTTPMethod        string      `json:"httpMethod"`
	HTTPURL           string      `json:"httpURL"`
	Params            string      `json:"Params"`
	Labels            *LabelsInfo `json:"Labels"`
}

type ApDataSetRes struct {
	DataSetID         int64        `json:"dataSetID"`
	ApDid             string       `json:"apDid"`
	DataSetName       string       `json:"dataSetName"`
	DataSetMethodName string       `json:"dataSetMethodName"`
	DataSetDesc       string       `json:"dataSetDesc"`
	HTTPMethod        string       `json:"httpMethod"`
	HTTPURL           string       `json:"httpURL"`
	Params            string       `json:"Params"`
	Status            string       `json:"Status"`
	ResDesc           *string      `json:"ResDesc"`
	Labels            *LabelsInfos `json:"Labels"`
}

type ApInfoRes struct {
	ApInfoID int64   `json:"apInfoID"`
	ApDid    *string `json:"apDid"`
	ApName   *string `json:"apName"`
	ApDesc   string  `json:"apDesc"`
	Status   string  `json:"Status"`
	ResDesc  string  `json:"ResDesc"`
	Avatar   *string `json:"Avatar"`
}

type ApplicationInfo struct {
	Did     string `json:"did"`
	Name    string `json:"name"`
	Website string `json:"website"`
}

type ApplicationInfoReq struct {
	Did     string `json:"did"`
	Name    string `json:"name"`
	Website string `json:"website"`
}

type BindAddress struct {
	Did     string `json:"did"`
	Address string `json:"address"`
	Chain   string `json:"chain"`
	Pubkey  string `json:"pubkey"`
	Sig     string `json:"sig"`
}

type ChainAddress struct {
	Chain           string `json:"chain"`
	ContractAddress string `json:"contract_address"`
}

type ClaimNFTRecord struct {
	TxHash          string `json:"tx_hash"`
	Chain           string `json:"chain"`
	ContractAddress string `json:"contract_address"`
	NftType         int64  `json:"nft_type"`
	UserDid         string `json:"user_did"`
	UserAddress     string `json:"user_address"`
	CreateTime      int64  `json:"create_time"`
	Result          string `json:"result"`
	Score           string `json:"score"`
}

type ClaimNFTRecordsResp struct {
	Count   int64             `json:"count"`
	Records []*ClaimNFTRecord `json:"records"`
}

type ClaimNFTResponse struct {
	ErrorCode int64     `json:"errorCode"`
	Address   string    `json:"address"`
	Param     *NFTParam `json:"param"`
}

type ClaimNFTWhere struct {
	UserDid     *string `json:"user_did"`
	UserAddress *string `json:"user_address"`
	Chain       *string `json:"chain"`
	NftType     *int64  `json:"nft_type"`
	Result      *string `json:"result"`
}

type ClientHello struct {
	Ver    string `json:"ver"`
	Type   string `json:"type"`
	Action int64  `json:"action"`
}

type ClientResponse struct {
	Ver   string   `json:"ver"`
	Type  string   `json:"type"`
	Did   string   `json:"did"`
	Nonce string   `json:"nonce"`
	Proof *Proof   `json:"proof"`
	Vps   []string `json:"vps"`
}

type DPAndMethod struct {
	Dp     *DataProvider   `json:"dp"`
	Method *ProviderMethod `json:"method"`
}

type DPDataSetList struct {
	DpDataSetData []*DpDataSetRes `json:"dpDataSetData"`
	CurPageNum    int64           `json:"curPageNum"`
	TotalNum      int64           `json:"totalNum"`
}

type DPMethodWithDp struct {
	Did               string       `json:"did"`
	Name              string       `json:"name"`
	Method            string       `json:"method"`
	MethodName        string       `json:"methodName"`
	MethodDescription string       `json:"methodDescription"`
	Icon              string       `json:"icon"`
	Used              int64        `json:"used"`
	Labels            *LabelsInfos `json:"labels"`
}

type DataProvider struct {
	Name            string `json:"name"`
	Type            string `json:"type"`
	Introduction    string `json:"introduction"`
	Did             string `json:"did"`
	CreateTime      int64  `json:"createTime"`
	Title           string `json:"title"`
	Provider        string `json:"provider"`
	InvokeFrequency int64  `json:"invokeFrequency"`
	APIState        int64  `json:"apiState"`
	Author          string `json:"author"`
	Popularity      int64  `json:"popularity"`
	Delay           int64  `json:"delay"`
	Icon            string `json:"icon"`
}

type DataProviderMethodWhere struct {
	NameLike *string `json:"name_like"`
	DidLike  *string `json:"did_like"`
}

type DataProviderWhere struct {
	NameLike *string `json:"name_like"`
}

type DpDataSetInfo struct {
	DataSetID         int64       `json:"dataSetID"`
	DataSetName       string      `json:"dataSetName"`
	DataSetMethodName string      `json:"dataSetMethodName"`
	DataSetDesc       string      `json:"dataSetDesc"`
	HTTPMethod        string      `json:"httpMethod"`
	HTTPURL           string      `json:"httpURL"`
	Params            string      `json:"Params"`
	Labels            *LabelsInfo `json:"Labels"`
}

type DpDataSetRes struct {
	DataSetID         int64        `json:"dataSetID"`
	DpDid             string       `json:"dpDid"`
	DataSetName       string       `json:"dataSetName"`
	DataSetMethodName string       `json:"dataSetMethodName"`
	DataSetDesc       string       `json:"dataSetDesc"`
	HTTPMethod        string       `json:"httpMethod"`
	HTTPURL           string       `json:"httpURL"`
	Params            string       `json:"Params"`
	Status            string       `json:"Status"`
	ResDesc           *string      `json:"ResDesc"`
	Labels            *LabelsInfos `json:"Labels"`
}

type DpInfoRes struct {
	DpInfoID int64   `json:"dpInfoID"`
	DpDid    *string `json:"dpDid"`
	DpName   *string `json:"dpName"`
	DpDesc   string  `json:"dpDesc"`
	Status   string  `json:"Status"`
	ResDesc  string  `json:"ResDesc"`
	Avatar   *string `json:"Avatar"`
}

type GenNFTCountResp struct {
	Count int64 `json:"count"`
}

type GenReputationCountResp struct {
	Count int64 `json:"count"`
}

type GetAllAlgorithmProviderMethodsResp struct {
	Total int64             `json:"total"`
	Data  []*APMethodWithAp `json:"data"`
}

type GetAllAlgorithmProvidersResp struct {
	Total int64                `json:"total"`
	Data  []*AlgorithmProvider `json:"data"`
}

type GetAllDataProviderMethodsResp struct {
	Total int64             `json:"total"`
	Data  []*DPMethodWithDp `json:"data"`
}

type GetAllDataProviders struct {
	Total int64           `json:"total"`
	Data  []*DataProvider `json:"data"`
}

type GetUserTasksResp struct {
	TotalCount int64        `json:"total_count"`
	Tasks      []*UserTasks `json:"tasks"`
}

type GetUserTasksWhere struct {
	UserDid  string  `json:"user_did"`
	DpDid    *string `json:"dp_did"`
	DpMethod *string `json:"dp_method"`
	ApDid    *string `json:"ap_did"`
	ApMethod *string `json:"ap_method"`
}

type LabelsInfo struct {
	BlockChain []string `json:"blockChain"`
	Category   []string `json:"category"`
	Scenario   []string `json:"scenario"`
}

type LabelsInfos struct {
	BlockChain []string `json:"blockChain"`
	Category   []string `json:"category"`
	Scenario   []string `json:"scenario"`
}

type Login struct {
	Did  string `json:"did"`
	Time int64  `json:"time"`
	Sig  string `json:"sig"`
}

type MethodDetail struct {
	Did              string          `json:"did"`
	Method           string          `json:"method"`
	ParamSchema      string          `json:"paramSchema"`
	ResultSchema     string          `json:"resultSchema"`
	URL              string          `json:"url"`
	CompositeSetting string          `json:"compositeSetting"`
	Param            string          `json:"param"`
	Name             string          `json:"name"`
	Description      string          `json:"description"`
	Invoked          string          `json:"invoked"`
	Latency          string          `json:"latency"`
	CreateTime       string          `json:"createTime"`
	HTTPMethod       *string         `json:"httpMethod"`
	CompositeData    []*MethodDetail `json:"compositeData"`
	Labels           *LabelsInfos    `json:"labels"`
	Status           string          `json:"status"`
}

type MethodInfo struct {
	Did   string          `json:"did"`
	Title string          `json:"title"`
	Data  []*MethodDetail `json:"data"`
}

type NFTClaimedCountResp struct {
	TotalCount int64 `json:"total_count"`
	UserCount  int64 `json:"user_count"`
}

type NFTParam struct {
	Hash    string `json:"hash"`
	Sig     string `json:"sig"`
	NftType int64  `json:"nftType"`
	Score   int64  `json:"score"`
}

type NFTSetting struct {
	ID             int64           `json:"id"`
	Name           string          `json:"name"`
	Description    string          `json:"description"`
	Image          string          `json:"image"`
	DpDid          string          `json:"dp_did"`
	DpMethod       string          `json:"dp_method"`
	ApDid          string          `json:"ap_did"`
	ApName         string          `json:"ap_name"`
	ApMethod       string          `json:"ap_method"`
	ApMethodName   string          `json:"ap_method_name"`
	LowestScore    int64           `json:"lowest_score"`
	ValidDays      int64           `json:"valid_days"`
	Restriction    string          `json:"restriction"`
	ChainAddresses []*ChainAddress `json:"chain_addresses"`
	IssueBy        string          `json:"issue_by"`
}

type NFTSettingResp struct {
	Count   int64         `json:"count"`
	Records []*NFTSetting `json:"records"`
}

type NFTSettingWhere struct {
	ID *int64 `json:"id"`
}

type NftLeadBoardWhere struct {
	NftType int64 `json:"nftType"`
}

type OuterTaskReq struct {
	CallerDid string            `json:"caller_did"`
	Data      *OuterTaskReqData `json:"data"`
	Sig       string            `json:"sig"`
}

type OuterTaskReqData struct {
	TaskID int64 `json:"task_id"`
}

type PriceInfo struct {
	PriceType  int64 `json:"priceType"`
	Price      int64 `json:"price"`
	ChargeType int64 `json:"chargeType"`
}

type Proof struct {
	Type               string `json:"type"`
	VerificationMethod string `json:"verificationMethod"`
	Created            int64  `json:"created"`
	Value              string `json:"value"`
}

type ProviderMethod struct {
	Name         string       `json:"name"`
	ParamSchema  string       `json:"paramSchema"`
	ResultSchema string       `json:"resultSchema"`
	Title        string       `json:"title"`
	Description  string       `json:"description"`
	Labels       *LabelsInfos `json:"labels"`
	CreateTime   int64        `json:"createTime"`
	NftType      int64        `json:"nftType"`
	TotalUsed    int64        `json:"totalUsed"`
	HasDataSet   bool         `json:"hasDataSet"`
	Status       string       `json:"status"`
	SupportMulti bool         `json:"supportMulti"`
}

type RefreshTokenInput struct {
	Token string `json:"token"`
}

type RequestOscoreData struct {
	Userdid      string        `json:"userdid"`
	Apdid        string        `json:"apdid"`
	Apmethod     string        `json:"apmethod"`
	Dpdid        string        `json:"dpdid"`
	Dpmethod     string        `json:"dpmethod"`
	OverwriteOld bool          `json:"overwriteOld"`
	Wallets      []*UserWallet `json:"wallets"`
}

type RequestOscoreReq struct {
	Appdid string             `json:"appdid"`
	Data   *RequestOscoreData `json:"data"`
	Sig    string             `json:"sig"`
}

type SNSBindingData struct {
	BrightID  bool `json:"bright_id"`
	ShuftiPro bool `json:"shufti_pro"`
	Tweeter   bool `json:"tweeter"`
	Github    bool `json:"github"`
	Linkedin  bool `json:"linkedin"`
	Facebook  bool `json:"facebook"`
}

type SNSBindingDataWithSig struct {
	Data *SNSBindingData `json:"data"`
	Sig  string          `json:"sig"`
}

type SNSBindingResp struct {
	Data      *SNSBindingDataWithSig `json:"data"`
	Encrypted *string                `json:"encrypted"`
}

type ServerHello struct {
	Ver       string      `json:"ver"`
	Type      string      `json:"type"`
	Nonce     string      `json:"nonce"`
	Server    *ServerInfo `json:"server"`
	Chain     []string    `json:"chain"`
	Alg       []string    `json:"alg"`
	VcFilters []*VCFilter `json:"vcFilters"`
}

type ServerInfo struct {
	Name               string `json:"name"`
	Icon               string `json:"icon"`
	URL                string `json:"url"`
	Did                string `json:"did"`
	VerificationMethod string `json:"verificationMethod"`
}

type SigResp struct {
	Hash string `json:"hash"`
	Sig  string `json:"sig"`
}

type SnapShotOptions struct {
	Address        string   `json:"address"`
	Symbol         string   `json:"symbol"`
	ThirdMediaType []string `json:"thirdMediaType"`
}

type StrategyResult struct {
	Address string `json:"address"`
	Score   int64  `json:"score"`
}

type SubmitApInfo struct {
	ApInfoID int64   `json:"apInfoID"`
	ApName   string  `json:"apName"`
	ApDid    string  `json:"apDid"`
	ApDesc   string  `json:"apDesc"`
	Avatar   *string `json:"Avatar"`
}

type SubmitDpInfo struct {
	DpInfoID int64   `json:"dpInfoID"`
	DpName   string  `json:"dpName"`
	DpDid    string  `json:"dpDid"`
	DpDesc   string  `json:"dpDesc"`
	Avatar   *string `json:"Avatar"`
}

type ThirdPartyVcStatus struct {
	MediaType string `json:"mediaType"`
	Status    bool   `json:"status"`
}

type TokenPrice struct {
	Name            string `json:"name"`
	ContractAddress string `json:"contractAddress"`
	Chain           string `json:"chain"`
}

type UnBindAddress struct {
	Did     string `json:"did"`
	Chain   string `json:"chain"`
	Address string `json:"address"`
}

type UpdateUserBasicInfoReq struct {
	Did      string  `json:"did"`
	NickName *string `json:"nick_name"`
	Email    *string `json:"email"`
	Vcode    *string `json:"vcode"`
}

type UserAddressInfo struct {
	Chain      string `json:"chain"`
	Address    string `json:"address"`
	CreateTime int64  `json:"createTime"`
	Visible    bool   `json:"visible"`
}

type UserAsset struct {
	Name         string `json:"name"`
	TokenAddress string `json:"tokenAddress"`
	Icon         string `json:"icon"`
	Chain        string `json:"chain"`
	Balance      string `json:"balance"`
	Price        string `json:"price"`
	Value        string `json:"value"`
}

type UserBasicInfo struct {
	Did      string  `json:"did"`
	NickName string  `json:"nick_name"`
	Avatar   *string `json:"avatar"`
	Email    string  `json:"email"`
}

type UserBasicInfoResp struct {
	WalletAddress    int64 `json:"walletAddress"`
	Verifications    int64 `json:"verifications"`
	Credentials      int64 `json:"credentials"`
	Nfts             int64 `json:"nfts"`
	ModelPublished   int64 `json:"modelPublished"`
	DatasetPublished int64 `json:"datasetPublished"`
}

type UserClaimedNft struct {
	Owner           string `json:"owner"`
	Score           int64  `json:"score"`
	ValidTo         int64  `json:"valid_to"`
	DpDid           string `json:"dp_did"`
	DpTitle         string `json:"dp_title"`
	DpMethod        string `json:"dp_method"`
	DpMethodTitle   string `json:"dp_method_title"`
	ApDid           string `json:"ap_did"`
	ApTitle         string `json:"ap_title"`
	ApMethod        string `json:"ap_method"`
	ApMethodTitle   string `json:"ap_method_title"`
	ValidDays       int64  `json:"valid_days"`
	Image           string `json:"image"`
	TxHash          string `json:"tx_hash"`
	TokenID         int64  `json:"token_id"`
	Name            string `json:"name"`
	IssueBy         string `json:"issue_by"`
	Chain           string `json:"chain"`
	LowestScore     int64  `json:"lowest_score"`
	Description     string `json:"description"`
	ClaimTime       int64  `json:"claim_time"`
	ContractAddress string `json:"contract_address"`
	NftType         int64  `json:"nft_type"`
	NftScore        int64  `json:"nft_score"`
	IsExpired       bool   `json:"is_expired"`
}

type UserClaimedNFTResp struct {
	Count   int64             `json:"count"`
	Records []*UserClaimedNft `json:"records"`
}

type UserClaimedNFTWhere struct {
	UserDid *string `json:"user_did"`
	Address *string `json:"address"`
	TokenID *int64  `json:"token_id"`
	Chain   *string `json:"chain"`
	NftType *int64  `json:"nft_type"`
}

type UserCredential struct {
	Score        string `json:"score"`
	DpName       string `json:"dp_name"`
	DpMethodName string `json:"dp_method_name"`
	ApName       string `json:"ap_name"`
	ApMethodName string `json:"ap_method_name"`
	CreateTime   string `json:"create_time"`
	ValidTo      int64  `json:"valid_to"`
}

type UserCredentials struct {
	TotalCount int64             `json:"total_count"`
	Data       []*UserCredential `json:"data"`
}

type UserCredntialWhere struct {
	UserDid  string  `json:"user_did"`
	DpDid    *string `json:"dp_did"`
	DpMethod *string `json:"dp_method"`
	ApDid    *string `json:"ap_did"`
	ApMethod *string `json:"ap_method"`
}

type UserLatestOscore struct {
	Oscore     int64  `json:"Oscore"`
	ApDid      string `json:"ApDID"`
	DpDid      string `json:"DpDID"`
	CreateTime int64  `json:"CreateTime"`
}

type UserTasks struct {
	TaskID            string  `json:"taskId"`
	UserDid           string  `json:"userDID"`
	ApDid             string  `json:"apDID"`
	ApName            string  `json:"apName"`
	ApIcon            string  `json:"apIcon"`
	ApMethod          string  `json:"apMethod"`
	ApMethodName      string  `json:"apMethodName"`
	DpDid             string  `json:"dpDID"`
	DpName            string  `json:"dpName"`
	DpIcon            string  `json:"dpIcon"`
	DpMethod          string  `json:"dpMethod"`
	DpMethodName      string  `json:"dpMethodName"`
	CreateTime        string  `json:"createTime"`
	UpdateTime        string  `json:"updateTime"`
	TaskStatus        string  `json:"taskStatus"`
	TaskResult        *string `json:"taskResult"`
	ResultFile        *string `json:"resultFile"`
	IssueTxhash       *string `json:"issueTxhash"`
	ValidTo           int64   `json:"valid_to"`
	NftType           int64   `json:"nftType"`
	InvolvedAddresses string  `json:"involved_addresses"`
}

type UserWallet struct {
	Chain   string `json:"chain"`
	Address string `json:"address"`
	Pubkey  string `json:"pubkey"`
	Sig     string `json:"sig"`
}

type VCFilter struct {
	Type       string    `json:"type"`
	Express    []*string `json:"express"`
	TrustRoots []string  `json:"trustRoots"`
	Required   bool      `json:"required"`
}

type WalletInfo struct {
	Chain   string `json:"chain"`
	Address string `json:"address"`
}

type GetAllAlgorithmProvidersReq struct {
	NameLike       *string `json:"nameLike"`
	OrderBy        *string `json:"orderBy"`
	OrderDirection *string `json:"orderDirection"`
}
